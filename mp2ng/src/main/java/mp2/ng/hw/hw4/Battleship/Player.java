// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package mp2.ng.hw.hw4.Battleship;

import java.util.Objects;

/************************************************************/
/**
 * 
 */
 public abstract class Player {
	String name;
	Player enemy;
	Field field;

	int[][] tracing = new int[Field.FIELD_SIZE][Field.FIELD_SIZE];
	
	AbstractView view;
	AbstractView enemyView;

	public Player(String name, AbstractView view, AbstractView enemyView) {
		this.name = name;
		this.view = view;
		this.enemyView = enemyView;

		field = new Field();
	}
	public static class Point{
		int x;
		int y;
		public Point(int x, int y) {
			this.x = x;
			this.y = y;
		}
		
	}

	public void setEnemy(Player enemy) {
		this.enemy = enemy;
		init();
	}
	private void init(){
		Objects.requireNonNull(enemy);
		Objects.requireNonNull(view);
		Objects.requireNonNull(enemyView);
	}
	public abstract Point setResult(Field.AtackResult atackResult);
	public abstract void updateOwnView(String field);
	public abstract void updateEnemyView(String field);
	public Field.AtackResult surviveBombardment(Point point){
		Field.AtackResult  atackResult =  field.surviveBombardment(point.x, point.y);
		view.updateField(field.toString());
		enemyView.updateTracingField(renderForEnemy());
		return atackResult;
	}
	@Override
	public String toString(){
		return name;	
	}
	public String renderForEnemy() {
		return field.renderForEnemy();
	}
}
